name: Image Scanner

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'images/**/Dockerfile'

jobs:
  ImageScanner:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     images: [ nginx ] 
    outputs:
     matrix: ${{ steps.matrix.outputs.matrix }}
    
    steps:        
          # Checkout Repo
          - name: Check out the repository
            uses: actions/checkout@v4
            with:
              fetch-depth: 2
          
          # Pull Latest Images
          - name: Check Changes Files
            id: matrix
            shell: pwsh
            run: |
                $files=(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
                write-host $files                
                $matrix=(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | Where-Object {$_ -CLike "*/Dockerfile"} )
                #write-host $matrix
                $images = New-Object Collections.Generic.List[String]
                foreach ($Image in $matrix) {
                    #write-host $Image
                    $images.Add($Image.Split("/")[1])
                # $images = $images + @{
                #         ImageName = $Image.Split("/")[1]
                #         Path =  $Image
                #     }                    
                }
                $jobs = @{
                        Images = $images
                  }

                $images | ConvertTo-Json 
                $images = $images | ConvertTo-Json
                write-host $images
                $jobs | ConvertTo-Json > images.json
                echo "matrix=$(get-content images.json)" >> "$env:GITHUB_OUTPUT"
                # {                
                #   echo 'matrix<<EOT'
                #   echo $images
                #   echo EOT
                # } >> "$env:GITHUB_OUTPUT"
                
          - name: check matrix
            shell: pwsh
            run: write-host "${{ steps.matrix.outputs.matrix }}"
  build:
    name: Build "${{ matrix }}" on ${{ matrix }}
    needs: ImageScanner
    strategy:
      matrix: ${{ needs.ImageScanner.outputs.matrix.Images }}
    runs-on: ubuntu-latest #${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
           echo "${{ matrix }}"
